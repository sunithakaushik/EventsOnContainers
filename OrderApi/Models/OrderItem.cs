using OrderApi.Infrastructure.Exceptions;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Threading.Tasks;

namespace OrderApi.Models
{
    // Module 24 - Added new Order project start with Models 
    // Using Relational DB - SQL on a seperate container - ideally 
    // MS owns its own data
    public class OrderItem
    {
        //Indicates the Order Id is the primary key and is autogenerated, this is another way of doing without using db context - module 24 --35 minutes
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int id { get; set; }
        public string EventTitle { get; set; }
        public string PictureUrl { get; set; }
        public decimal UnitPrice { get; set; }
        public int Units { get; set; }
        public int EventId { get; private set; }
        protected OrderItem() { }
        public Order Order { get; set; }
        public int OrderId { get; set; }

        //converts a cart item to an order item - Module 24
        public OrderItem(int productId, string productName, decimal unitPrice, string pictureUrl, int units = 1)
        {
            if (units <= 0)
            {
                throw new OrderingDomainException("Invalid number of units");
                // build own exception if quantity is 0, print own message
            }

            EventId = productId;
            EventTitle = productName;
            UnitPrice = unitPrice;
            Units = units;
            PictureUrl = pictureUrl;
        }

        public void SetPictureUri(string pictureUri)
        {
            if (!String.IsNullOrWhiteSpace(pictureUri))
            {
                PictureUrl = pictureUri;
            }
        }

        public void AddUnits(int units)
        {
            if (units < 0)
            {
                throw new OrderingDomainException("Invalid units");
            }
            Units += units;
        }
    }
}
